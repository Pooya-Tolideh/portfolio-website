

//Skill Category Tab

.c-skill-cat__tab {
    // for skill-cat flexbox
    align-self: stretch;

    display: flex;
    flex-wrap: nowrap;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    padding: sz(l) 0;

    &:hover {
        cursor: pointer;

        .c-skill-cat__divider::before {
            transform: scaleX(1);
        }

        .c-skill-cat__icon {
            opacity: 1;
        }
    }

    // vertical spacing
    @include mq(1120px, null, 600px) {
        padding: 2.4vh 0;
    }

    @include mq(1120px, null, 768px) {
        padding: sz(l) 0;
    }
    
}

.c-skill-cat__title {
    color: $color-lightgray;
    letter-spacing: 0.1em;
    @include fz(l);
    font-weight: $font-reg;

    @include mq(488px, 1120px){
        @include fz(xl);
    }

    //small height
    @media all and (min-width: 1220px) and (max-height: 600px) {
        @include fz(xl);
    }

    //vertical spacing
    @include mq(1120px, null, 600px) {
        font-size: 1.5em;
    }

    @include mq(1120px, null, 768px) {
        @include fz(l);
    }

}

.c-skill-cat__divider {
    width: 100%; // important to set this relative width for super stretchy items
    flex: 50;   // max growth 
    height: 1px;
    position: relative;
    background: $color-gray;
    margin: 0 10px;
}

.c-skill-cat__divider::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 1px;
    background: $color-orange;
    display: inline-block;
    transform-origin: left center 0;
    transform: scaleX(0);
    transition: transform 150ms ease-in;
}

.c-skill-cat__icon {
    width: sz(s); height: sz(s);
    fill: $color-lightgray;
    opacity: 0.7;
    flex: 1;
    flex-basis: sz(s); // so it doesn't shrink beyond its smallest width
    transform: rotate(0deg);
    transition: opacity 150ms ease-out 150ms, transform 250ms ease-in-out;
}


//Skill Category Pod
.c-skill-cat__pod {
    background: $color-navy;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-around;
    padding: sz(s);
    padding-top: sz(xl);
    max-height: 100vh;
    overflow: scroll;
    opacity: 1;

    // Animation Lesson Learned:
    // never let the animation from different elements overalp. (unless they are not related)
    // And always calculate the timing and delays. decide what starts first and how long it takes
    // or if it is accompanied with other transitions


    //transition for opening
    // wait for the profile to disappear
    //then expand and shortly after increase opacity
    transition: max-height 300ms ease-in 250ms,
                opacity 300ms ease-in 280ms;

    .c-skill-cat__pod--isClosed & {
        max-height: 0;
        overflow: hidden;
        padding: 0;
        opacity: 0;
        // transition for closing
        //closing needs to happen quick.
        //but opacity takes longer to make it loop smooth
        transition: max-height 230ms ease-out , 
                    opacity 300ms ease-out;
    }

    //reducing pod height when in dekstop mode
    @include mq(1120px, null, 600px) {
        max-height: 45vh;
    }
}

.c-skill-cat__pod-wrapper.c-skill-cat__pod--isClosed::before {
    height: 0;
    // transition: height ease-out 700ms;
}

.c-skill-cat__pod-wrapper {
    position: relative;
}

.c-skill-cat__pod-wrapper::before {
    content: " ";
    position: absolute;
    height: 60px;
    width: 100%;
    left: 0;
    bottom:0;
    z-index: 1000;
    $darker-navy : darken($color-navy, 2%);
    background: rgba($color-navy, 0.5);
    background: linear-gradient(to bottom, rgba($color-navy,0.4) 0%, rgba($darker-navy,1) 70%);
    // transition: height ease-in 580ms;
}



.c-skill-cat__pod-item {
    @include wt(half);
    padding: 0 10% sz(xxl);

    @include mq(650px, null) {
        @include wt(third);
    }

    @include mq(1120px, null, 600px) {
        @include wt(half);
    }
}